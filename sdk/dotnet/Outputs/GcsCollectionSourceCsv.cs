// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rockset.Outputs
{

    [OutputType]
    public sealed class GcsCollectionSourceCsv
    {
        /// <summary>
        /// The names of the columns.
        /// </summary>
        public readonly ImmutableArray<string> ColumnNames;
        /// <summary>
        /// The types of the columns.
        /// </summary>
        public readonly ImmutableArray<string> ColumnTypes;
        /// <summary>
        /// Can be one of: UTF-8, ISO*8859*1, UTF-16.
        /// </summary>
        public readonly string? Encoding;
        /// <summary>
        /// Escape character removes any special meaning from the character that follows it. Defaults to backslash.
        /// </summary>
        public readonly string? EscapeChar;
        /// <summary>
        /// If the first line in every object specifies the column names.
        /// </summary>
        public readonly bool? FirstLineAsColumnNames;
        /// <summary>
        /// Character within which a cell value is enclosed. Defaults to double quote.
        /// </summary>
        public readonly string? QuoteChar;
        /// <summary>
        /// A single character that is the column separator.
        /// </summary>
        public readonly string? Separator;

        [OutputConstructor]
        private GcsCollectionSourceCsv(
            ImmutableArray<string> columnNames,

            ImmutableArray<string> columnTypes,

            string? encoding,

            string? escapeChar,

            bool? firstLineAsColumnNames,

            string? quoteChar,

            string? separator)
        {
            ColumnNames = columnNames;
            ColumnTypes = columnTypes;
            Encoding = encoding;
            EscapeChar = escapeChar;
            FirstLineAsColumnNames = firstLineAsColumnNames;
            QuoteChar = quoteChar;
            Separator = separator;
        }
    }
}
