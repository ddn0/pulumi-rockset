// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rockset

import (
	"context"
	"reflect"

	"github.com/ddn0/pulumi-rockset/sdk/go/rockset/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a query lambda. The `tag` defaults to `latest`.
func LookupQueryLambda(ctx *pulumi.Context, args *LookupQueryLambdaArgs, opts ...pulumi.InvokeOption) (*LookupQueryLambdaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueryLambdaResult
	err := ctx.Invoke("rockset:index/getQueryLambda:getQueryLambda", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueryLambda.
type LookupQueryLambdaArgs struct {
	// Name of the query lambda.
	Name string `pulumi:"name"`
	// Tag name.
	Tag *string `pulumi:"tag"`
	// Workspace the query lambda resides in.
	Workspace string `pulumi:"workspace"`
}

// A collection of values returned by getQueryLambda.
type LookupQueryLambdaResult struct {
	// Description of the query lambda.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last time the query lambda was executed.
	LastExecuted string `pulumi:"lastExecuted"`
	// Name of the query lambda.
	Name string `pulumi:"name"`
	// Query lambda SQL.
	Sql string `pulumi:"sql"`
	// Tag name.
	Tag *string `pulumi:"tag"`
	// Query lambda tag version.
	Version string `pulumi:"version"`
	// Workspace the query lambda resides in.
	Workspace string `pulumi:"workspace"`
}

func LookupQueryLambdaOutput(ctx *pulumi.Context, args LookupQueryLambdaOutputArgs, opts ...pulumi.InvokeOption) LookupQueryLambdaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueryLambdaResult, error) {
			args := v.(LookupQueryLambdaArgs)
			r, err := LookupQueryLambda(ctx, &args, opts...)
			var s LookupQueryLambdaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueryLambdaResultOutput)
}

// A collection of arguments for invoking getQueryLambda.
type LookupQueryLambdaOutputArgs struct {
	// Name of the query lambda.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Workspace the query lambda resides in.
	Workspace pulumi.StringInput `pulumi:"workspace"`
}

func (LookupQueryLambdaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryLambdaArgs)(nil)).Elem()
}

// A collection of values returned by getQueryLambda.
type LookupQueryLambdaResultOutput struct{ *pulumi.OutputState }

func (LookupQueryLambdaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryLambdaResult)(nil)).Elem()
}

func (o LookupQueryLambdaResultOutput) ToLookupQueryLambdaResultOutput() LookupQueryLambdaResultOutput {
	return o
}

func (o LookupQueryLambdaResultOutput) ToLookupQueryLambdaResultOutputWithContext(ctx context.Context) LookupQueryLambdaResultOutput {
	return o
}

// Description of the query lambda.
func (o LookupQueryLambdaResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueryLambdaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time the query lambda was executed.
func (o LookupQueryLambdaResultOutput) LastExecuted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.LastExecuted }).(pulumi.StringOutput)
}

// Name of the query lambda.
func (o LookupQueryLambdaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Name }).(pulumi.StringOutput)
}

// Query lambda SQL.
func (o LookupQueryLambdaResultOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Sql }).(pulumi.StringOutput)
}

// Tag name.
func (o LookupQueryLambdaResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Query lambda tag version.
func (o LookupQueryLambdaResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Version }).(pulumi.StringOutput)
}

// Workspace the query lambda resides in.
func (o LookupQueryLambdaResultOutput) Workspace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaResult) string { return v.Workspace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueryLambdaResultOutput{})
}
