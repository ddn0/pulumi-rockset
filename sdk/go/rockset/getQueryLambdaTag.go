// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rockset

import (
	"context"
	"reflect"

	"github.com/ddn0/pulumi-rockset/sdk/go/rockset/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated. Use `QueryLambda` instead and specify the `tag`.
func LookupQueryLambdaTag(ctx *pulumi.Context, args *LookupQueryLambdaTagArgs, opts ...pulumi.InvokeOption) (*LookupQueryLambdaTagResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueryLambdaTagResult
	err := ctx.Invoke("rockset:index/getQueryLambdaTag:getQueryLambdaTag", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueryLambdaTag.
type LookupQueryLambdaTagArgs struct {
	// Name of the query lambda.
	Name string `pulumi:"name"`
	// Tag name.
	Tag string `pulumi:"tag"`
	// Workspace the query lambda resides in.
	Workspace string `pulumi:"workspace"`
}

// A collection of values returned by getQueryLambdaTag.
type LookupQueryLambdaTagResult struct {
	// Description of the query lambda.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last time the query lambda was executed.
	LastExecuted string `pulumi:"lastExecuted"`
	// Name of the query lambda.
	Name string `pulumi:"name"`
	// Query lambda SQL.
	Sql string `pulumi:"sql"`
	// Tag name.
	Tag string `pulumi:"tag"`
	// Query lambda tag version.
	Version string `pulumi:"version"`
	// Workspace the query lambda resides in.
	Workspace string `pulumi:"workspace"`
}

func LookupQueryLambdaTagOutput(ctx *pulumi.Context, args LookupQueryLambdaTagOutputArgs, opts ...pulumi.InvokeOption) LookupQueryLambdaTagResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueryLambdaTagResult, error) {
			args := v.(LookupQueryLambdaTagArgs)
			r, err := LookupQueryLambdaTag(ctx, &args, opts...)
			var s LookupQueryLambdaTagResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueryLambdaTagResultOutput)
}

// A collection of arguments for invoking getQueryLambdaTag.
type LookupQueryLambdaTagOutputArgs struct {
	// Name of the query lambda.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag name.
	Tag pulumi.StringInput `pulumi:"tag"`
	// Workspace the query lambda resides in.
	Workspace pulumi.StringInput `pulumi:"workspace"`
}

func (LookupQueryLambdaTagOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryLambdaTagArgs)(nil)).Elem()
}

// A collection of values returned by getQueryLambdaTag.
type LookupQueryLambdaTagResultOutput struct{ *pulumi.OutputState }

func (LookupQueryLambdaTagResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryLambdaTagResult)(nil)).Elem()
}

func (o LookupQueryLambdaTagResultOutput) ToLookupQueryLambdaTagResultOutput() LookupQueryLambdaTagResultOutput {
	return o
}

func (o LookupQueryLambdaTagResultOutput) ToLookupQueryLambdaTagResultOutputWithContext(ctx context.Context) LookupQueryLambdaTagResultOutput {
	return o
}

// Description of the query lambda.
func (o LookupQueryLambdaTagResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueryLambdaTagResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time the query lambda was executed.
func (o LookupQueryLambdaTagResultOutput) LastExecuted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.LastExecuted }).(pulumi.StringOutput)
}

// Name of the query lambda.
func (o LookupQueryLambdaTagResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Name }).(pulumi.StringOutput)
}

// Query lambda SQL.
func (o LookupQueryLambdaTagResultOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Sql }).(pulumi.StringOutput)
}

// Tag name.
func (o LookupQueryLambdaTagResultOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Tag }).(pulumi.StringOutput)
}

// Query lambda tag version.
func (o LookupQueryLambdaTagResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Version }).(pulumi.StringOutput)
}

// Workspace the query lambda resides in.
func (o LookupQueryLambdaTagResultOutput) Workspace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryLambdaTagResult) string { return v.Workspace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueryLambdaTagResultOutput{})
}
