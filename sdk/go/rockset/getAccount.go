// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rockset

import (
	"context"
	"reflect"

	"github.com/ddn0/pulumi-rockset/sdk/go/rockset/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about the Rockset deployment for the specified api server.
func GetAccount(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccountResult
	err := ctx.Invoke("rockset:index/getAccount:getAccount", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAccount.
type GetAccountResult struct {
	// The AWS account ID to reference in AWS policies.
	AccountId string `pulumi:"accountId"`
	// The Rockset clusters available to this API key.
	Clusters []GetAccountCluster `pulumi:"clusters"`
	// The external ID to use in AWS trust policies.
	ExternalId string `pulumi:"externalId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the organization for the API key.
	Organization string `pulumi:"organization"`
	// The name of the Rockset user used for AWS trust policies.
	RocksetUser string `pulumi:"rocksetUser"`
}

func GetAccountOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetAccountResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetAccountResult, error) {
		r, err := GetAccount(ctx, opts...)
		var s GetAccountResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetAccountResultOutput)
}

// A collection of values returned by getAccount.
type GetAccountResultOutput struct{ *pulumi.OutputState }

func (GetAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountResult)(nil)).Elem()
}

func (o GetAccountResultOutput) ToGetAccountResultOutput() GetAccountResultOutput {
	return o
}

func (o GetAccountResultOutput) ToGetAccountResultOutputWithContext(ctx context.Context) GetAccountResultOutput {
	return o
}

// The AWS account ID to reference in AWS policies.
func (o GetAccountResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The Rockset clusters available to this API key.
func (o GetAccountResultOutput) Clusters() GetAccountClusterArrayOutput {
	return o.ApplyT(func(v GetAccountResult) []GetAccountCluster { return v.Clusters }).(GetAccountClusterArrayOutput)
}

// The external ID to use in AWS trust policies.
func (o GetAccountResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization for the API key.
func (o GetAccountResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Organization }).(pulumi.StringOutput)
}

// The name of the Rockset user used for AWS trust policies.
func (o GetAccountResultOutput) RocksetUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.RocksetUser }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccountResultOutput{})
}
